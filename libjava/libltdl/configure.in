dnl Process this file with autoconf to create configure.

AC_INIT(ltdl.c)

AC_ARG_WITH(auxdir,
[  --with-auxdir=DIR   path to autoconf auxiliary files],
[AC_CONFIG_AUX_DIR($with_auxdir)
dnl This is here just to satisfy automake.
ifelse(not,equal,[AC_CONFIG_AUX_DIR(../..)])],
[AC_CONFIG_AUX_DIR_DEFAULT])

# This is another blatant hack to work around automake bugs.
mkinstalldirs="$ac_aux_dir/mkinstalldirs"
AC_SUBST(mkinstalldirs)

if test -z "$enable_ltdl_install$enable_ltdl_convenience"; then
  if test -f ${srcdir}/ltconfig && test -f ${srcdir}/ltmain.sh; then
    # if libltdl is libtoolized, it is assumed to be stand-alone and
    # installed unless the command line overrides it (tested above)
    enable_ltdl_install=yes
  else
    AC_MSG_WARN([*** The top-level configure must select either])
    AC_MSG_WARN([*** [A""C_LIBLTDL_INSTALLABLE] or [A""C_LIBLTDL_CONVENIENCE].])
    AC_MSG_ERROR([*** Maybe you want to --enable-ltdl-install?])
  fi
fi

AM_INIT_AUTOMAKE(libltdl,1.1,-)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

AC_PROG_CC
AC_C_CONST
AC_C_INLINE

AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)

AC_MSG_CHECKING([for garbage collector to use])
AC_ARG_ENABLE(java-gc,
changequote(<<,>>)dnl
<<  --enable-java-gc=TYPE   choose garbage collector [boehm]>>,
changequote([,])
  GC=$enableval,
  GC=boehm)

GCINCS=
if test "$GC" = "boehm"; then
   GCINCS='-I$(top_srcdir)/../../boehm-gc/include'
   GCINCS="$GCINCS `cat ../../boehm-gc/boehm-cflags`"
   AC_DEFINE(HAVE_BOEHM_GC)
fi
AC_SUBST(GCINCS)

AC_LIB_LTDL

dnl Output the makefile
AC_OUTPUT(Makefile)

# Local Variables:
# mode:shell-script
# sh-indentation:2
# End:
